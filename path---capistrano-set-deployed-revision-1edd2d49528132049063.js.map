{"version":3,"sources":["webpack:///path---capistrano-set-deployed-revision-1edd2d49528132049063.js","webpack:///./.cache/json/capistrano-set-deployed-revision.json"],"names":["webpackJsonp","853","module","exports","data","post","id","html","htmlAst","type","children","tagName","properties","value","className","dataLanguage","quirksMode","fields","slug","prefix","frontmatter","title","subTitle","cover","author","footnote","site","siteMetadata","facebook","appId","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,GAAA,uIAAAC,KAAA,8jDAA2jDC,SAAyKC,KAAA,OAAAC,WAA2BD,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,gHAAsIJ,KAAA,OAAAI,MAAA,OAA6BJ,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,sJAA4KJ,KAAA,OAAAI,MAAA,OAA6BJ,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,iWAAuXJ,KAAA,OAAAI,MAAA,OAA6BJ,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,mKAAyLJ,KAAA,OAAAI,MAAA,OAA6BJ,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,8HAAoJJ,KAAA,OAAAI,MAAA,OAA6BJ,KAAA,UAAAE,QAAA,MAAAC,YAA+CE,WAAA,oBAAAC,aAAA,QAAuDL,WAAcD,KAAA,OAAAI,MAAA,aAAmCJ,KAAA,UAAAE,QAAA,MAAAC,YAA+CE,WAAA,kBAA8BJ,WAAcD,KAAA,UAAAE,QAAA,OAAAC,YAAgDE,WAAA,kBAA8BJ,WAAcD,KAAA,OAAAI,MAAA,iWAAuXJ,KAAA,OAAAI,MAAA,eAAqCJ,KAAA,OAAAI,MAAA,OAA6BJ,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,+HAAmJT,MAAUY,YAAA,IAAoBC,QAAWC,KAAA,qCAAAC,OAAA,cAAkEC,aAAgBC,MAAA,+CAAAC,SAAA,qIAAAC,MAAA,OAAqNC,QAAWlB,GAAA,2FAAAC,KAAA,oLAA0RkB,UAAanB,GAAA,6FAAAC,KAAA,wEAAgLmB,MAASC,cAAgBC,UAAYC,MAAA,OAAcC,aAAgBZ,KAAA","file":"path---capistrano-set-deployed-revision-1edd2d49528132049063.js","sourcesContent":["webpackJsonp([146854908743636],{\n\n/***/ 853:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"id\":\"/Users/prasanna/projects/blog/content/posts/2016-01-03--capistrano_set_deployed_revision/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>We use Capistrano to deploy our Rails application. Recently i upgraded our capistrano version from 2 to 3</p>\\n<p>Capistrano 3 has a complete DSL changeover. Apart from this one other major change I figured out was the way a Git repository is been deployed.</p>\\n<p>Previously a Git repository is cloned in the deploy location. Now in Cap 3 a Git archive is been downloaded to the deploy location. This means the deploy directory is no more a Git repository. During Cap 2 times, we used to run a â€˜git logâ€™ command in the deployed driectory to find the deployed revision. Now after upgrade I am unable to do this.</p>\\n<p>Cap 3 has got a REVISION file, which contain the SHA of the deployed commit. This wasnâ€™t useful in our case, as we show this message in our web application.</p>\\n<p>So i ended up writing a Cap task using a similar logic to create a REVISION file with our custom formatted Git message.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">namespace :deploy do\\n  task :add\\\\_revision\\\\_file do\\n    on roles(:app) do\\n      within repo\\\\_path do\\n        execute(:git, :&#39;log&#39;, :&quot;--pretty=format:&#39;%h | %ai | %d %s&#39;&quot;, :&#39;-1&#39;,\\n        :&quot;#{fetch(:branch)}&quot;, &quot;&gt;#{release\\\\_path}/REVISION&quot;)\\n      end\\n    end\\n  end\\nend\\n\\n\\nafter &#39;deploy:updating&#39;, &#39;deploy:add\\\\_revision\\\\_file&#39;</code></pre>\\n      </div>\\n<p>This will overwrite the REVISION file created by Cap with our custom message. Which will be consumed by our application.</p>\",\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We use Capistrano to deploy our Rails application. Recently i upgraded our capistrano version from 2 to 3\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Capistrano 3 has a complete DSL changeover. Apart from this one other major change I figured out was the way a Git repository is been deployed.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Previously a Git repository is cloned in the deploy location. Now in Cap 3 a Git archive is been downloaded to the deploy location. This means the deploy directory is no more a Git repository. During Cap 2 times, we used to run a â€˜git logâ€™ command in the deployed driectory to find the deployed revision. Now after upgrade I am unable to do this.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Cap 3 has got a REVISION file, which contain the SHA of the deployed commit. This wasnâ€™t useful in our case, as we show this message in our web application.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"So i ended up writing a Cap task using a similar logic to create a REVISION file with our custom formatted Git message.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"text\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"namespace :deploy do\\n  task :add\\\\_revision\\\\_file do\\n    on roles(:app) do\\n      within repo\\\\_path do\\n        execute(:git, :'log', :\\\"--pretty=format:'%h | %ai | %d %s'\\\", :'-1',\\n        :\\\"#{fetch(:branch)}\\\", \\\">#{release\\\\_path}/REVISION\\\")\\n      end\\n    end\\n  end\\nend\\n\\n\\nafter 'deploy:updating', 'deploy:add\\\\_revision\\\\_file'\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"This will overwrite the REVISION file created by Cap with our custom message. Which will be consumed by our application.\"}]}],\"data\":{\"quirksMode\":false}},\"fields\":{\"slug\":\"/capistrano_set_deployed_revision/\",\"prefix\":\"2016-01-03\"},\"frontmatter\":{\"title\":\"Set deployed Git revision using Capistrano 3\",\"subTitle\":\"While deploying Rails application using Capistrano 3, recording the current deployed git revision to be used by Rails applicaiton.\",\"cover\":null}},\"author\":{\"id\":\"/Users/prasanna/projects/blog/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><strong>Prasanna</strong> is a full stack web developer, loves to build user interfaces with Javascript. Considers himself as a geek, quick learner and a team player ðŸ˜ƒ </p>\"},\"footnote\":{\"id\":\"/Users/prasanna/projects/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"<ul>\\n<li>rants and writings through personal experience</li>\\n</ul>\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/capistrano_set_deployed_revision/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---capistrano-set-deployed-revision-1edd2d49528132049063.js","module.exports = {\"data\":{\"post\":{\"id\":\"/Users/prasanna/projects/blog/content/posts/2016-01-03--capistrano_set_deployed_revision/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>We use Capistrano to deploy our Rails application. Recently i upgraded our capistrano version from 2 to 3</p>\\n<p>Capistrano 3 has a complete DSL changeover. Apart from this one other major change I figured out was the way a Git repository is been deployed.</p>\\n<p>Previously a Git repository is cloned in the deploy location. Now in Cap 3 a Git archive is been downloaded to the deploy location. This means the deploy directory is no more a Git repository. During Cap 2 times, we used to run a â€˜git logâ€™ command in the deployed driectory to find the deployed revision. Now after upgrade I am unable to do this.</p>\\n<p>Cap 3 has got a REVISION file, which contain the SHA of the deployed commit. This wasnâ€™t useful in our case, as we show this message in our web application.</p>\\n<p>So i ended up writing a Cap task using a similar logic to create a REVISION file with our custom formatted Git message.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">namespace :deploy do\\n  task :add\\\\_revision\\\\_file do\\n    on roles(:app) do\\n      within repo\\\\_path do\\n        execute(:git, :&#39;log&#39;, :&quot;--pretty=format:&#39;%h | %ai | %d %s&#39;&quot;, :&#39;-1&#39;,\\n        :&quot;#{fetch(:branch)}&quot;, &quot;&gt;#{release\\\\_path}/REVISION&quot;)\\n      end\\n    end\\n  end\\nend\\n\\n\\nafter &#39;deploy:updating&#39;, &#39;deploy:add\\\\_revision\\\\_file&#39;</code></pre>\\n      </div>\\n<p>This will overwrite the REVISION file created by Cap with our custom message. Which will be consumed by our application.</p>\",\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We use Capistrano to deploy our Rails application. Recently i upgraded our capistrano version from 2 to 3\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Capistrano 3 has a complete DSL changeover. Apart from this one other major change I figured out was the way a Git repository is been deployed.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Previously a Git repository is cloned in the deploy location. Now in Cap 3 a Git archive is been downloaded to the deploy location. This means the deploy directory is no more a Git repository. During Cap 2 times, we used to run a â€˜git logâ€™ command in the deployed driectory to find the deployed revision. Now after upgrade I am unable to do this.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Cap 3 has got a REVISION file, which contain the SHA of the deployed commit. This wasnâ€™t useful in our case, as we show this message in our web application.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"So i ended up writing a Cap task using a similar logic to create a REVISION file with our custom formatted Git message.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"text\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"namespace :deploy do\\n  task :add\\\\_revision\\\\_file do\\n    on roles(:app) do\\n      within repo\\\\_path do\\n        execute(:git, :'log', :\\\"--pretty=format:'%h | %ai | %d %s'\\\", :'-1',\\n        :\\\"#{fetch(:branch)}\\\", \\\">#{release\\\\_path}/REVISION\\\")\\n      end\\n    end\\n  end\\nend\\n\\n\\nafter 'deploy:updating', 'deploy:add\\\\_revision\\\\_file'\"}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"This will overwrite the REVISION file created by Cap with our custom message. Which will be consumed by our application.\"}]}],\"data\":{\"quirksMode\":false}},\"fields\":{\"slug\":\"/capistrano_set_deployed_revision/\",\"prefix\":\"2016-01-03\"},\"frontmatter\":{\"title\":\"Set deployed Git revision using Capistrano 3\",\"subTitle\":\"While deploying Rails application using Capistrano 3, recording the current deployed git revision to be used by Rails applicaiton.\",\"cover\":null}},\"author\":{\"id\":\"/Users/prasanna/projects/blog/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><strong>Prasanna</strong> is a full stack web developer, loves to build user interfaces with Javascript. Considers himself as a geek, quick learner and a team player ðŸ˜ƒ </p>\"},\"footnote\":{\"id\":\"/Users/prasanna/projects/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"<ul>\\n<li>rants and writings through personal experience</li>\\n</ul>\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/capistrano_set_deployed_revision/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/capistrano-set-deployed-revision.json\n// module id = 853\n// module chunks = 146854908743636"],"sourceRoot":""}