{"version":3,"sources":["webpack:///path---sax-parser-characters-method-e8b044fe052921eb80d0.js","webpack:///./.cache/json/sax-parser-characters-method.json"],"names":["webpackJsonp","884","module","exports","data","post","id","html","htmlAst","type","children","tagName","properties","value","quirksMode","fields","slug","prefix","frontmatter","title","subTitle","cover","author","footnote","site","siteMetadata","facebook","appId","pathContext"],"mappings":"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","file":"path---sax-parser-characters-method-e8b044fe052921eb80d0.js","sourcesContent":["webpackJsonp([162389623907518],{\n\n/***/ 884:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"id\":\"/Users/prasanna/projects/blog-gatsby/content/posts/2010-10-07--sax-parser-characters-method/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Was playing around SAX parsing some Gigs of XML file :) Here are few learnings from the game.</p>\\n<p>My intention was to read values between a corresponding tag. I initially went after using characters() in SAX parser which actually worked fine for initial feeds. But as i keep increasing the size of the XMLs and if the size of the tagContent was large the problem arises. characters() function not always gives back the entire value in a single shot. It may return the value in multiple chunks. So need to be careful in assigning and using the values from characters() method.</p>\\n<p>So the better way to use characters() method is to keep appending all the values to a buffer and use the value in the corresponding end tag section. Also need to make sure that the buffer has to be flushed in the corresponding start element.</p>\\n<p><strong>Sample Xml:</strong></p>\\n<Sample>\\n    <StudentCollection>\\n        <Student>\\n            <Name>Jack</Name>\\n            <Age>12</Age>\\n        </Student>\\n        <Student>\\n            <Name>Jill</Name>\\n            <Age>13</Age>\\n        </Student>\\n        <Student>\\n            <Name>Rose</Name>\\n            <Age>14</Age>\\n        </Student>\\n    </StudentCollection>\\n</Sample>\\n<p><strong>Sample SAX handler code to print the Names:</strong></p>\\n<p><strong>Initial Code: (Works fine for small values &#x26; small files)</strong></p>\\n<p>public void startElement(String uri,String tag,String qName,\\nAttributes attributes){ }</p>\\n<p>public void characters(char ch[],int start,int length){<br>\\nSystem.out.println(“Name of a student: ” + new String(ch,start,length));\\n} </p>\\n<p>public void endElements(String uri,String tag,String qName){ }</p>\\n<p><strong>Final Code:</strong></p>\\n<p>public void startElement(String uri,String tag,String qName,\\nAttributes attributes){\\nif(“Name”.equals(tag)){\\ntagContentBuffer = new StringBuffer();\\n}\\n}\\npublic void characters(char ch[],int start,int length){\\ntagContentBuffer.append(new String(ch,start,length));\\n}\\npublic void endElements(String uri,String tag,String qName){\\nif(“Name”.equals(tag)){\\nSystem.out.println(“Name of a student: ” +\\ntagContentBuffer.toString());\\n}\\n}</p>\",\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Was playing around SAX parsing some Gigs of XML file :) Here are few learnings from the game.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"My intention was to read values between a corresponding tag. I initially went after using characters() in SAX parser which actually worked fine for initial feeds. But as i keep increasing the size of the XMLs and if the size of the tagContent was large the problem arises. characters() function not always gives back the entire value in a single shot. It may return the value in multiple chunks. So need to be careful in assigning and using the values from characters() method.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"So the better way to use characters() method is to keep appending all the values to a buffer and use the value in the corresponding end tag section. Also need to make sure that the buffer has to be flushed in the corresponding start element.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Sample Xml:\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"sample\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"studentcollection\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n        \"},{\"type\":\"element\",\"tagName\":\"student\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"name\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Jack\"}]},{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"age\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"12\"}]},{\"type\":\"text\",\"value\":\"\\n        \"}]},{\"type\":\"text\",\"value\":\"\\n        \"},{\"type\":\"element\",\"tagName\":\"student\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"name\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Jill\"}]},{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"age\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"13\"}]},{\"type\":\"text\",\"value\":\"\\n        \"}]},{\"type\":\"text\",\"value\":\"\\n        \"},{\"type\":\"element\",\"tagName\":\"student\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"name\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Rose\"}]},{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"age\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"14\"}]},{\"type\":\"text\",\"value\":\"\\n        \"}]},{\"type\":\"text\",\"value\":\"\\n    \"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Sample SAX handler code to print the Names:\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Initial Code: (Works fine for small values & small files)\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public void startElement(String uri,String tag,String qName,\\nAttributes attributes){ }\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public void characters(char ch[],int start,int length){\"},{\"type\":\"element\",\"tagName\":\"br\",\"properties\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\nSystem.out.println(“Name of a student: ” + new String(ch,start,length));\\n} \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public void endElements(String uri,String tag,String qName){ }\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Final Code:\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public void startElement(String uri,String tag,String qName,\\nAttributes attributes){\\nif(“Name”.equals(tag)){\\ntagContentBuffer = new StringBuffer();\\n}\\n}\\npublic void characters(char ch[],int start,int length){\\ntagContentBuffer.append(new String(ch,start,length));\\n}\\npublic void endElements(String uri,String tag,String qName){\\nif(“Name”.equals(tag)){\\nSystem.out.println(“Name of a student: ” +\\ntagContentBuffer.toString());\\n}\\n}\"}]}],\"data\":{\"quirksMode\":false}},\"fields\":{\"slug\":\"/sax-parser-characters-method/\",\"prefix\":\"2010-10-07\"},\"frontmatter\":{\"title\":\"SAX parser characters() method.\",\"subTitle\":\"Sax Parser, behaviour of characters() method. Sample code in Java.\",\"cover\":null}},\"author\":{\"id\":\"/Users/prasanna/projects/blog-gatsby/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><strong>Prasanna</strong> is a full stack web developer, loves to build user interfaces with Javascript. Considers himself as a geek, quick learner and a team player 😃 </p>\"},\"footnote\":{\"id\":\"/Users/prasanna/projects/blog-gatsby/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"<ul>\\n<li>rants and writings through personal experience</li>\\n</ul>\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/sax-parser-characters-method/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---sax-parser-characters-method-e8b044fe052921eb80d0.js","module.exports = {\"data\":{\"post\":{\"id\":\"/Users/prasanna/projects/blog-gatsby/content/posts/2010-10-07--sax-parser-characters-method/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Was playing around SAX parsing some Gigs of XML file :) Here are few learnings from the game.</p>\\n<p>My intention was to read values between a corresponding tag. I initially went after using characters() in SAX parser which actually worked fine for initial feeds. But as i keep increasing the size of the XMLs and if the size of the tagContent was large the problem arises. characters() function not always gives back the entire value in a single shot. It may return the value in multiple chunks. So need to be careful in assigning and using the values from characters() method.</p>\\n<p>So the better way to use characters() method is to keep appending all the values to a buffer and use the value in the corresponding end tag section. Also need to make sure that the buffer has to be flushed in the corresponding start element.</p>\\n<p><strong>Sample Xml:</strong></p>\\n<Sample>\\n    <StudentCollection>\\n        <Student>\\n            <Name>Jack</Name>\\n            <Age>12</Age>\\n        </Student>\\n        <Student>\\n            <Name>Jill</Name>\\n            <Age>13</Age>\\n        </Student>\\n        <Student>\\n            <Name>Rose</Name>\\n            <Age>14</Age>\\n        </Student>\\n    </StudentCollection>\\n</Sample>\\n<p><strong>Sample SAX handler code to print the Names:</strong></p>\\n<p><strong>Initial Code: (Works fine for small values &#x26; small files)</strong></p>\\n<p>public void startElement(String uri,String tag,String qName,\\nAttributes attributes){ }</p>\\n<p>public void characters(char ch[],int start,int length){<br>\\nSystem.out.println(“Name of a student: ” + new String(ch,start,length));\\n} </p>\\n<p>public void endElements(String uri,String tag,String qName){ }</p>\\n<p><strong>Final Code:</strong></p>\\n<p>public void startElement(String uri,String tag,String qName,\\nAttributes attributes){\\nif(“Name”.equals(tag)){\\ntagContentBuffer = new StringBuffer();\\n}\\n}\\npublic void characters(char ch[],int start,int length){\\ntagContentBuffer.append(new String(ch,start,length));\\n}\\npublic void endElements(String uri,String tag,String qName){\\nif(“Name”.equals(tag)){\\nSystem.out.println(“Name of a student: ” +\\ntagContentBuffer.toString());\\n}\\n}</p>\",\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Was playing around SAX parsing some Gigs of XML file :) Here are few learnings from the game.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"My intention was to read values between a corresponding tag. I initially went after using characters() in SAX parser which actually worked fine for initial feeds. But as i keep increasing the size of the XMLs and if the size of the tagContent was large the problem arises. characters() function not always gives back the entire value in a single shot. It may return the value in multiple chunks. So need to be careful in assigning and using the values from characters() method.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"So the better way to use characters() method is to keep appending all the values to a buffer and use the value in the corresponding end tag section. Also need to make sure that the buffer has to be flushed in the corresponding start element.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Sample Xml:\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"sample\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"studentcollection\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n        \"},{\"type\":\"element\",\"tagName\":\"student\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"name\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Jack\"}]},{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"age\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"12\"}]},{\"type\":\"text\",\"value\":\"\\n        \"}]},{\"type\":\"text\",\"value\":\"\\n        \"},{\"type\":\"element\",\"tagName\":\"student\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"name\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Jill\"}]},{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"age\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"13\"}]},{\"type\":\"text\",\"value\":\"\\n        \"}]},{\"type\":\"text\",\"value\":\"\\n        \"},{\"type\":\"element\",\"tagName\":\"student\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"name\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Rose\"}]},{\"type\":\"text\",\"value\":\"\\n            \"},{\"type\":\"element\",\"tagName\":\"age\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"14\"}]},{\"type\":\"text\",\"value\":\"\\n        \"}]},{\"type\":\"text\",\"value\":\"\\n    \"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Sample SAX handler code to print the Names:\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Initial Code: (Works fine for small values & small files)\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public void startElement(String uri,String tag,String qName,\\nAttributes attributes){ }\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public void characters(char ch[],int start,int length){\"},{\"type\":\"element\",\"tagName\":\"br\",\"properties\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\nSystem.out.println(“Name of a student: ” + new String(ch,start,length));\\n} \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public void endElements(String uri,String tag,String qName){ }\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Final Code:\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"public void startElement(String uri,String tag,String qName,\\nAttributes attributes){\\nif(“Name”.equals(tag)){\\ntagContentBuffer = new StringBuffer();\\n}\\n}\\npublic void characters(char ch[],int start,int length){\\ntagContentBuffer.append(new String(ch,start,length));\\n}\\npublic void endElements(String uri,String tag,String qName){\\nif(“Name”.equals(tag)){\\nSystem.out.println(“Name of a student: ” +\\ntagContentBuffer.toString());\\n}\\n}\"}]}],\"data\":{\"quirksMode\":false}},\"fields\":{\"slug\":\"/sax-parser-characters-method/\",\"prefix\":\"2010-10-07\"},\"frontmatter\":{\"title\":\"SAX parser characters() method.\",\"subTitle\":\"Sax Parser, behaviour of characters() method. Sample code in Java.\",\"cover\":null}},\"author\":{\"id\":\"/Users/prasanna/projects/blog-gatsby/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><strong>Prasanna</strong> is a full stack web developer, loves to build user interfaces with Javascript. Considers himself as a geek, quick learner and a team player 😃 </p>\"},\"footnote\":{\"id\":\"/Users/prasanna/projects/blog-gatsby/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"<ul>\\n<li>rants and writings through personal experience</li>\\n</ul>\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/sax-parser-characters-method/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/sax-parser-characters-method.json\n// module id = 884\n// module chunks = 162389623907518"],"sourceRoot":""}